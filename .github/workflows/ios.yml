name: iOS starter workflow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build and Test default scheme using any available iPhone simulator
    runs-on: macos-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Checkout Networking
        uses: actions/checkout@v4
        with:
          repository: 'rockiesgrizzly/Networking'
          path: 'Networking'

      - name: Set up Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.0'

      - name: Resolve Packages  # Add this step
        run: xcodebuild -resolvePackageDependencies -project Portfolio.xcodeproj -verbose

      - name: Set Default Scheme
        run: |
          scheme_list=$(xcodebuild -project Portfolio.xcodeproj -list -json | tr -d "\n") 
          default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
          echo $default | cat >default
          echo Using default scheme: $default

      - name: Build
        env:
          scheme: ${{ 'default' }}
          platform: ${{ 'iOS Simulator' }}
        run: |
          # xcrun xctrace returns via stderr, not the expected stdout (see https://developer.apple.com/forums/thread/663959)
          device=`xcrun xctrace list devices 2>&1 | grep -oE 'iOS Simulator.*?[^\(]+' | head -1 | awk '{print $1}' | sed -e 's/ Simulator$//'`
          
          if [ $scheme = default ]; 
            then scheme=$(cat default); 
          fi
          
          filetype_parameter="project" && file_to_build="Portfolio.xcodeproj"; 
          file_to_build=`echo $file_to_build | awk '{print $1}'`
          xcodebuild build-for-testing -scheme "$scheme" -"$filetype_parameter" "$file_to_build" -destination "platform=$platform,name=$device"

      - name: Test
        env:
          scheme: ${{ 'default' }}
          platform: ${{ 'iOS Simulator' }}
        run: |
          # xcrun xctrace returns via stderr, not the expected stdout (see https://developer.apple.com/forums/thread/663959)
          device=`xcrun xctrace list devices 2>&1 | grep -oE 'iOS Simulator.*?[^\(]+' | head -1 | awk '{print $1}' | sed -e 's/ Simulator$//'`
          
          if [ $scheme = default ]; 
            then scheme=$(cat default); 
          fi
          
          filetype_parameter="project" && file_to_build="Portfolio.xcodeproj";
          file_to_build=`echo $file_to_build | awk '{print $1}'`
          xcodebuild test-without-building -scheme "$scheme" -"$filetype_parameter" "$file_to_build" -destination "platform=$platform,name=$device"
